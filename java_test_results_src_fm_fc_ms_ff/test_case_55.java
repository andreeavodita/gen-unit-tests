/*
DateToJodaTimeBaseLocalConverter extends AbstractConverter  @Override public boolean canHandle(Object source, TypeToken?> targetTypeToken)  return targetTypeToken.isSubtypeOf(BaseLocal.class) && (source instanceof Date);  @SuppressWarnings("unchecked") @Override Object convert(Object source, TypeToken?> targetTypeToken); @Override boolean canHandle(Object source, TypeToken?> targetTypeToken);
*/

@Test public void testCanHandle()  DateToJodaTimeBaseLocalConverter convert(new DateToJodaTimeBaseLocalConverter().canHandle(new DateToJodaTimeBaseLocalConverter().class); assertEquals("canHandle", convert(new DateToJodaTimeBaseLocalConverter().canHandle(new DateToJodaTimeBaseLocalConverter().isSubtypeOf(BaseLocal.class); assertEquals("unchecked", convert(new DateToJodaTimeBaseLocalConverter().canHandle(new DateToJodaTimeBaseLocalConverter().isSubtypeOf(BaseLocal.class);