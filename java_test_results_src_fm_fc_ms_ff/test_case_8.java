/*
ArtifactUtil  public static Path download(Path directory, String gav) throws IOException  checkNotNull(directory); checkNotNull(gav); var coordinate = ParsedCoordinate.fromCoordinate(gav); String url = MAVEN_HOST + "/maven2/" + coordinate.groupId.replaceAll(".", "/") + "/" + coordinate.artifactId + "/" + coordinate.version + "/" + coordinate.filename; log.debug("Downloading artifact: ", url); Path output = directory.resolve(coordinate.filename); NetUtil.download(url, output.toFile()); return output;  private ArtifactUtil(); static Path getArtifactFile(Path directory, String coordinates); static StreamPath> findArtifactFile(Path directory, String artifactId); static Path download(Path directory, String gav); @SuppressWarnings("deprecation") static boolean checkHash(Path directory, String gav); static String getLatestVersion(String gav);
*/

@Test public void downloadFile() throws IOException  Path url = new Path("/maven2/"); Path url = new Path("/maven2/"); Path url = new Path("/maven2/"); Path url = new Path("/maven2/"); Path url = new Path("/maven2/"); Path url = new Path("/maven2/"); StreamPath> download(path, gav); assertEquals("Downloading artifact: url); assertEquals("/maven2/"); assertEquals("/maven2/"); assertEquals("/maven2/"); assertEquals("/maven2/"); assertEquals("/maven2/"); assertEquals("/maven2/");