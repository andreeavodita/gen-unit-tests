/*
FsHandle implements Closeable  public ListFileListlet> list() throws IOException  if (refListing == null)  try (StreamPath> paths = Files.list(ref))  refListing = paths.map(this::buildNewListlet).collect(Collectors.toList());   return refListing;  FsHandle(); FsHandle(String start); FsHandle(String start, FsHandleOptions options); FsHandle(FileSystem fs, String start, FsHandleOptions options); int getId(); String pwd(); void addUpdateCallback(ConsumerEV_FileListing> callback); boolean up(); boolean down(String directory); boolean setPath(String path); ListFileListlet> list(); @Override void close();
*/

@Test public void list() throws Exception  ListFileListlet> list() throws Exception  ListFileListlet> list() = new FsHandle(new ArrayList("foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo", "foo"); list.list(); list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); ListFileListlet> list().list(); list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(foo.list()); ListFileListlet> list().addCollectors(fo