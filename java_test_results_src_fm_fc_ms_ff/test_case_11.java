/*
JarUtil  public static OptionalString> getManifestValue(Path file, String attribute) throws IOException  checkNotNull(file); checkNotNull(attribute); return getManifestValue(file.toFile(), attribute);  private JarUtil(); static OptionalString> getManifestValue(Path file, String attribute); static OptionalString> getManifestValue(File file, String attribute); static Attributes getManifest(Path file); static Attributes getManifest(File file); static long getResourceSize(Path file, String resource); static long getResourceSize(File file, String resource); static URL getResourceUrl(Path file, String resource); static boolean resourceExists(Path file, String resource);
*/

@Test public void testGetManifestValue() throws IOException  OptionalString> manifestValue = manifestValue.getManifestValue(file, attribute); OptionalString> manifestValue = manifestValue.getManifestValue(file, attribute); assertEquals("foo", manifestValue.toFile(), attribute); assertEquals("foo", manifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals("foo", ManifestValue.toFile(), attribute); assertEquals