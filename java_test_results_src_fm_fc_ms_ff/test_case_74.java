/*
SequenceScriptRunner implements ScriptRunner  @Override public boolean canHandle(ScriptFragment scriptFragment)  return scriptFragment.getMethodName().equals(NAMESPACE);  @Override Object run(ScriptFragment scriptFragment); @Override boolean canHandle(ScriptFragment scriptFragment);
*/

@Test public void testCanHandle() throws Exception  SequenceScriptRunner scriptFragment = new SequenceScriptRunner(ScriptFragment.getMethodName()); SequenceScriptRunner scriptFragment = new SequenceScriptRunner(ScriptFragment.getMethodName()); SequenceScriptRunner scriptFragment = new SequenceScriptRunner(ScriptFragment.getMethodName()); SequenceScriptRunner scriptFragment = new SequenceScriptRunner(ScriptFragment); scriptFragment = scriptFragment.getMethodName().getMethodName().equals(ScriptFragment); scriptFragment.getMethodName()); SequenceScriptRunner scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment = scriptFragment.getMethodName(); scriptFragment.getMethodName(); scriptFragment = scriptF