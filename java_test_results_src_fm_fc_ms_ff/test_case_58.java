/*
TypeTokenUtils  public static ListTypeToken?>> extractGenericTypeTokens(TypeToken?> typeToken)  ListTypeToken?>> typeTokens = new ArrayList>(); try  Type[] types = ((ParameterizedType) typeToken.getType()).getActualTypeArguments(); for (Type type : types)  typeTokens.add(TypeToken.of(type));   catch (ClassCastException e)   return typeTokens;  static TypeToken?> extractElementTypeToken(TypeToken?> typeToken); static ListTypeToken?>> extractGenericTypeTokens(TypeToken?> typeToken);
*/

@Test public void extractGenericTypeTokens() throws Exception  TypeToken?>> typeTokens = new TypeTokenUtils(); TypeToken?> typeTokens = new TypeTokenUtils(); TypeToken?> typeTokens = new TypeTokenUtils(); TypeToken?> typeTokens = new TypeTokenUtils(); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); TypeToken?> typeTokens = TypeToken.extractGenericTypeTokens(TypeToken.of(TypeToken)); assertEquals(TypeToken.getTypeTokens().get(0).get(0).getTypeTokens().get(0).getTypeTokens().get(0).get(0).getTypeTokens().get(0).get(0).getTypeTokens().size()); assertE