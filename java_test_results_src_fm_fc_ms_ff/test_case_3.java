/*
DnsUtil  public static OptionalInteger> getPort(String server) throws InterruptedException, ExecutionException  Objects.requireNonNull(server); DnsQuestion question = new DefaultDnsQuestion(server, DnsRecordType.SRV); DnsResponse response = RESOLVER.query(question).get().content(); DnsRawRecord record = response.recordAt(DnsSection.ANSWER); if (record == null) return Optional.empty(); ByteBuf buffer = record.content(); buffer.readShort(); buffer.readShort(); int port = buffer.readShort(); if (!ValidationUtil.port(port)) return Optional.empty(); return Optional.of(port);  private DnsUtil(); static OptionalInteger> getPort(String server); static FutureInetAddress> resolve(String server);
*/

@Test public void testGetPort() throws InterruptedException  OptionalInteger> port = DnsUtil.getPort("server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server")); OptionalInteger> response = DnsQuestion.getPort("test", "test", "test", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "server", "