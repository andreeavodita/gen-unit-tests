/*
OidUtil  public static long computeCollectionTag(long raw)  return encode(raw, OFFSET_OTYPE, LENGTH_OTYPE, OTYPE_COLLECTION);  private OidUtil(); static long computeAttributeTag(long raw, String type, boolean singular); static long computeAttributeTag(long raw, int type, boolean singular); static long computeCollectionTag(long raw); static long computeDocumentTag(long raw); static int getAttributeType(long tag); static int getOidType(long tag); static boolean isSingular(long tag); static long uuidToTag(String uuid); static final int OFFSET_OTYPE; static final int LENGTH_OTYPE; static final int OTYPE_ATTRIBUTE; static final int OTYPE_COLLECTION; static final int OTYPE_DOCUMENT; static final int OFFSET_ATYPE; static final int LENGTH_ATYPE; static final int ATYPE_BOOLEAN; static final int ATYPE_BYTES; static final int ATYPE_DOUBLE; static final int ATYPE_INSTANCEFLAVOR; static final int ATYPE_INSTANCETYPE; static final int ATYPE_INTEGER; static final int ATYPE_LONG; static final int ATYPE_OID; static final int ATYPE_OSTYPE; static final int ATYPE_STRING; static final int ATYPE_X509CERTIFICATE; static final int OFFSET_SINGULARITY; static final int LENGTH_SINGULARITY;
*/

@Test public void testComputeCollectionTag()  long raw = OidUtil.computeCollectionTag("LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", "LONG", ""); assertEquals(oidUtil.computeCollectionTag("a", "a", OidUtil.computeCollectionTag