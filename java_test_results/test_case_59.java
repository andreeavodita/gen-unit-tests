/*
public static ListTypeToken?>> extractGenericTypeTokens(TypeToken?> typeToken)  ListTypeToken?>> typeTokens = new ArrayList>(); try  Type[] types = ((ParameterizedType) typeToken.getType()).getActualTypeArguments(); for (Type type : types)  typeTokens.add(TypeToken.of(type));   catch (ClassCastException e)   return typeTokens;
*/

@Test public void extractGenricTypeToken(TypeToken.getTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeType()).isEqualTo(Type[] types); assertEquals([] types); assertEquals([] types); assertEquals((TypeToken.getTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments(Type)); assertEquals(Type[] types = (TypeToken.addTypeArguments(Type)); assertEquals(Type[] types = new ArrayList(Type)); assertEquals(TypeToken.getActualTypeArguments(TypeToken.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments.getActualTypeArguments()).isEqualTo(Type)); assertEquals(Type[] types = (TypeToken.add(Type)); assertEquals(TypeToken.getActualTypeArguments.getActualTypeArguments(Type)); assertEquals(Type[] types = new ArrayList(Type)); assertEquals(TypeToken