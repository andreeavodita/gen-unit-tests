/*
public static long getResourceSize(Path file, String resource) throws IOException  checkNotNull(resource); checkNotNull(file); URL url = getResourceUrl(file, resource); if (url == null) throw new IOException(); return Resources.asByteSource(url).size();
*/

@Test public void getResourceSize() throws IOException  checkNotNull(resource); checkNotNull(resource); assertEquals(resources.getResourceSize(file, resource); assertEquals(resources.getResourceSize(file, resource); assertEquals(resources.getResourceSize(file, resource); assertEquals(resources.getResourceSize(file, resource); assertEquals("resourcesource", id()); assertEquals("resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resourcesource", "resources.size()); assertEquals("resources.size()); assertEquals("resources.size()); assertEquals("resources.size()); assertEquals("resources.size()); assertEquals("resources.size()); assertEquals("resourcesource", "resourcesource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource", "resource",